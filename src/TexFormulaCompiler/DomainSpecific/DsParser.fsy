%{
open Microsoft.FSharp.Text.Lexing
open TexAst
open QueryStatement

let buildQueryStatement forEntity selectedProperty statementType = 
    {
        For = forEntity
        Select = selectedProperty
        Type = statementType
    }

%}

%token <int> INT
%token <string> STRING
%token <string> ID
%token FOR WITH SELECT WHERE
%token AND OR
%token EQ LT LE GT GE NEQ
%token EOF

%left OR
%left AND

%start start
%type <QueryStatement.Statement> start

%%

start:
	| FOR ID WITH ID EQ value SELECT ID       { buildQueryStatement $2 $8 (Single($4, $6))  }
	| FOR ID SELECT ID WHERE whereStatement   { buildQueryStatement $2 $4 (Many($6)) }

value:
    | STRING  { String($1) }
	| INT     { Int($1) }

whereStatement:
    | operation                          { $1 }
	| whereStatement AND whereStatement  { And($1, $3) }
	| whereStatement OR whereStatement   { Or($1, $3) }

operation:
    | ID operationType value  { Operation($2, $1, $3) }
    | value operationType ID  { Operation($2, $3, $1) }

operationType: 
    | EQ    { Eq }
	| LT    { Le }
	| LE    { Le }
	| GT    { Gt }
	| GE    { Ge }
	| NEQ   { Neq }
