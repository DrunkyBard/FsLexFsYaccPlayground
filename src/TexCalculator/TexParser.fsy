%{
open TexAst
open Microsoft.FSharp.Text.Lexing
%}

%start start

%token <int> INT
%token LSQBRACE RSQBRACE LPAREN RPAREN LCURLY RCURLY EXCL CARET EQ UNDERSCORE SLASH COMMA
%token PLUS SUB MUL DIV 
%token FRAC SQRT SUM PROD INTEGRAL TIMES INFTY TO LIM BMOD
%token EOF

%type <TexAst.Expr> start

%%

start:
	formula EOF { $1 }

formula:
    | sum  { $1 }
	| plus { $1 }
	| INT  { Int($1) }
    

plus:
    | formula PLUS formula  { Plus($1, $3) }

sum:
    | SLASH SUM LCURLY argumentSet RCURLY  { Sum(List.rev $4) }


argumentSet:
    | formula  { [$1] }
	| argumentSet COMMA formula { $3::$1 }